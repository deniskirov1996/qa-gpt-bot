
bot_id: '' # Идентификатор вашего бота
log_path: '' # Путь до лог файла
start_text:
  cases: 'Разработай максимально возможное количество функциональных тестовых кейсов с различными вариациями тестовых данных и применением техник тест-дизайна. Проверки должны полностью покрывать требования:\n'
  api: 'Разработай максимально возможное количество API тестов с различными вариациями тестовых данных для полей по спецификации open API с применением тест-дизайна:\n'
  api_swagger: 'Разработай максимально возможное количество API тестов с различными вариациями тестовых данных для полей по спецификации swagger с применением тест-дизайна:\n'
  api_curl: 'Сгенерируй CURL запросы с различными вариациями тестовых данных и применением тест-дизайна, также напиши ожидаемый результат для проверки api метода по спецификации open API:\n'
  api_curl_swagger: 'Сгенерируй несколько CURL запросов с различными вариациями тестовых данных с применением тест-дизайна и напиши ожидаемый результат к каждой проверке для тестов по спецификации swagger:\n'
  api_java: 'Трансформируй CURL запросы в api тесты на Java с использованием RestAssured:\n'
  api_python: 'Трансформируй CURL запросы в api тесты на Python с использованием Requests:\n'
  api_pageobject: 'Составь локаторы для html элементов, используя XPATH, на JAVA + Selenide, создаваемые переменные должны быть типа String, по переданной html:\n'
  more_cases: 'Сгенерируй еще дополнительные тестовые кейсы по переданным ранее условиям. Пример необходимого формата сгенерированных кейсов: 1. **Тестовый кейс «Название»** - **Цель**: Цель проверка. - **Предусловие**: Предусловие. - **Шаги**: - Шаги. - **Ожидаемый результат**: ожидаемый результат.'
  formater: ' Пример необходимого формата сгенерированных кейсов: 1. **Тестовый кейс «Название»** - **Цель**: Цель проверка. - **Предусловие**: Предусловие. - **Шаги**: - Шаги. - **Ожидаемый результат**: ожидаемый результат.'
auth:
  gigachat_auth: 'Basic {token}' #Токен базовой авторизации в sber gigachat
  yagpt_oauth: '' # токен авторизации в yandex gpt
  yandexPassportOauthToken: '' # токен авторизации в yandex gpt (аналогичный предыдущему)
  folder_id: '' # folder id в личном кабинете yandexgpt
  yandexgpt_key: '' # Ключ yandexgpt
links:
  gigachat_auth_link: 'https://ngw.devices.sberbank.ru:9443/api/v2/oauth'
  gigachat_gpt_link: 'https://gigachat.devices.sberbank.ru/api/v1/chat/completions'
  jira_link: '' # Ссылка на вашу Jira
  yandex_gpt_api_url: 'https://llm.api.cloud.yandex.net/foundationModels/v1/completion'
  yandex_gpt_token_url: 'https://iam.api.cloud.yandex.net/iam/v1/tokens'
  wiki_url: '' # Ссылка на ваш confluence
  testit_url: '' #Ссылка на ваш TestIT
database:
  pg_host: '' # Адрес вашей БД Postgres
  pg_port: '' # Порт вашей БД Postgres
  pg_database: '' # Имя вашей БД 
  pg_user: '' # Логин вашей БД
  pg_password: '' # Пароль вашей БД
